name: Chocolatine
env:
  MIRROR_URL  : git@github.com:EpitechPromo2027/B-CPE-101-COT-1-1-myprintf-ilham.adios.git
  EXECUTABLES : libmy.a
on:
  push:
    branches-ignore:
      - "ga-ignore-"
  pull_request:
    branches-ignore:
      - "ga-ignore-"
jobs:
  check_coding_style:
    runs-on:  ubuntu-latest
    container:  ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: coding style
        run:  |
          check.sh $(pwd) $(pwd) | tee coding-style-reports.log
          if [-s coding-style-reports.log]; then
            cat coding-style-reports.log | while read -r line; do
            fichier=$(echo "$line" | cut -d ':' -f1)
            fichier-num=$(echo "$line" | cut -d ':' -f2)
            message=$(echo "$line" | cut -d ':' -f3-)
            echo "::error file=$(fichier), line=$(fichier-num)::$(message)"
            done
          exit 1
          fi
  check_program_compilation :
      needs:  [check_coding_style]
      runs-on: ubuntu-latest
      container:
        image: epitechcontent/epitest-docker
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Make
          env:
            TEMP: false
          run : make_
          timeout-minutes: 2
        - name: make clean
          run: make clean
        - name: check files
          run: |
            if [[ "${{ env.EXECUTABLES }}" =~ "," ]]; then TEST=`echo "${{ env.EXECUTABLES }} && find . -type f -executable | grep $TEST" | tr ',' ' '`; else find . -type f -executable | grep ${{ env.EXECUTABLES }}; fi;
  run_tests :
      needs: [check_program_compilation]
      runs-on: ubuntu-latest
      container:
        image: epitechcontent/epitest-docker
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: run tests
          run: make tests_run
          timeout-minutes: 2
  push_to_mirror:
      needs: [check_coding_style, check_program_compilation, run_tests]
      runs-on: ubuntu-latest
      if: ${{ github.event_name == 'push' }}
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: pixta-dev/repository-mirroring-action@v1
          with:
            target_repo_url:
              ${{env.MIRROR_URL}}
            ssh_private_key:
              ${{secrets.GIT_SSH_PRIVATE_KEY}}
