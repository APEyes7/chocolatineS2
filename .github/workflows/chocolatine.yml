name: Chocolatine
on:
    push:
        branches-ignore:
        - "ga-ignore-*"
    pull_request:
        branches-ignore:
        - "ga-ignore-*"
env:
  EXECUTABLES: my_sh
  MIRROR_URL: git@github.com:EpitechPromo2027/B-PSU-200-COT-2-1-minishell1-godwin.bewa.git
jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       with:
         fetch-depth: 0
     - name: Coding Style Checker
       run: check.sh $(pwd) $(pwd)
     - name: Display errors
       run: |
         check.sh $(pwd) $(pwd)
         cat coding-style-reports.log
          if [[ -s $coding-style-reports.log ]]
          then
            exit 0
          else
            i=1
            while read _r line
            do
            tab=( ${line//:/})
            echo "::error::file=${tab[0]}, line=${tab[1]}, ::${tab[2]} coding style error:${tab[0]}#L${tab[1]}"
              ((i++))
              done < "coding-style-reports.log"
            exit 1
          fi
  check_program_compilation:
      needs:
        - check_coding_style
      runs-on: ubuntu-latest
      container:
        image: ghcr.io/epitech/coding-style-checker:latest
      steps:
        - name: Checkout2
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Compilation
          run: make
          timeout-minutes: 2
        - name: Clean
          run: make clean
        - name: Verify executables
          run: |
           find -name "${{env.EXECUTABLES}}" | grep -q . && exit 0 || exit 1
  run_tests:
    needs:
      - check_program_compilation
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - name: Checkout3
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: make tests_run
        timeout-minutes: 2
  push_to_mirror:
    needs:
      - run_tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout4
        uses: actions/checkout@v3
        with:
          fetch_depth: 0
      - name: Mirroring
        uses: pixta-dev/repository-mirroring-action@v1
        with:
           target_repo_url: ${{ env.MIRROR_URL }}
           ssh-private-key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
